{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abc\\\\Desktop\\\\New folder\\\\client\\\\src\\\\features\\\\account\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { registerUser } from \"./accountSlice\";\nimport { Box, Container, Paper, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  var _errors$username, _errors$email, _errors$password;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isValid,\n      errors\n    }\n  } = useForm({\n    mode: \"all\"\n  });\n  const dispatch = useAppDispatch();\n  async function submitForm(data) {\n    try {\n      await dispatch(registerUser(data));\n      console.log(data);\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: Paper,\n    sx: {\n      padding: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(submitForm),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.username,\n        ...register(\"username\", {\n          required: \"Username is required\"\n        }),\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.email,\n        ...register(\"email\", {\n          required: \"Email is required\",\n          pattern: {\n            value: /^\\w+[\\w.-]*@\\w+(-\\w+)*(\\.\\w{2,3})+$/,\n            message: \"Not a valid email address\"\n          }\n        }),\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.password,\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"Password is required\",\n          pattern: {\n            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()-_+=<>?]).{8,}$/,\n            message: \"Password does not meet complexity requirements\"\n          }\n        }),\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"Bjx9YdaM/jR8NhJLOZjtQs6Cj/s=\", false, function () {\n  return [useNavigate, useForm, useAppDispatch];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useForm","useAppDispatch","registerUser","Box","Container","Paper","TextField","useNavigate","jsxDEV","_jsxDEV","Register","_s","_errors$username","_errors$email","_errors$password","navigate","register","handleSubmit","formState","isSubmitting","isValid","errors","mode","dispatch","submitForm","data","console","log","error","component","sx","padding","children","onSubmit","username","required","helperText","message","fileName","_jsxFileName","lineNumber","columnNumber","email","pattern","value","password","type","_c","$RefreshReg$"],"sources":["C:/Users/abc/Desktop/New folder/client/src/features/account/Register.tsx"],"sourcesContent":["import { FieldValues, Form, useForm } from \"react-hook-form\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { registerUser } from \"./accountSlice\";\r\nimport { Box, Container, Paper, TextField } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid, errors },\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n  const dispatch = useAppDispatch();\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(registerUser(data));\r\n      console.log(data);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <Container component={Paper} sx={{ padding: 4 }}>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit(submitForm)}\r\n      >\r\n        <TextField\r\n          error={!!errors.username}\r\n          {...register(\"username\", { required: \"Username is required\" })}\r\n          helperText={errors?.username?.message as string}\r\n        ></TextField>\r\n         <TextField\r\n          error={!!errors.email}\r\n          {...register(\"email\", {\r\n            required: \"Email is required\",\r\n            pattern: {\r\n              value: /^\\w+[\\w.-]*@\\w+(-\\w+)*(\\.\\w{2,3})+$/              ,\r\n              message: \"Not a valid email address\",\r\n            },\r\n          })}\r\n          helperText={errors?.email?.message as string}\r\n        ></TextField>\r\n        <TextField\r\n          error={!!errors.password}\r\n          type=\"password\"\r\n          {...register(\"password\", {\r\n            required: \"Password is required\",\r\n            pattern: {\r\n              value:\r\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()-_+=<>?]).{8,}$/,\r\n              message: \"Password does not meet complexity requirements\",\r\n            },\r\n          })}\r\n          helperText={errors?.password?.message as string}\r\n        ></TextField>\r\n        <button type=\"submit\">Register</button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}