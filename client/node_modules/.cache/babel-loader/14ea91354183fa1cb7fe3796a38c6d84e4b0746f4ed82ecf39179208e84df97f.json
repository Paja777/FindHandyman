{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  loggedIn: false\n};\nexport const accountSlice = createSlice({\n  name: \"account\",\n  initialState,\n  reducers: {\n    signOut: state => {\n      state.username = '';\n      state.email = \"\";\n      state.password = \"\";\n      state.loggedIn = false;\n      ;\n    },\n    registerUser: (state, {\n      payload\n    }) => {\n      state.username = payload.username;\n      state.email = payload.email;\n      state.password = payload.password;\n      state.loggedIn = true;\n      localStorage.setItem(`${state.username}`, JSON.stringify(state));\n    },\n    loginUser: (state, {\n      payload\n    }) => {\n      state.username = payload.username;\n      state.email = payload.email;\n      state.password = payload.password;\n      state.loggedIn = true;\n    }\n  }\n});\nexport const {\n  signOut,\n  registerUser,\n  loginUser\n} = accountSlice.actions;","map":{"version":3,"names":["createSlice","initialState","username","email","password","loggedIn","accountSlice","name","reducers","signOut","state","registerUser","payload","localStorage","setItem","JSON","stringify","loginUser","actions"],"sources":["C:/Users/abc/Desktop/New folder/client/src/features/account/accountSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\ninterface AccountState {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  loggedIn: boolean;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  loggedIn: false,\r\n};\r\n\r\n\r\nexport const accountSlice = createSlice({\r\n  name: \"account\",\r\n  initialState,\r\n  reducers: {\r\n    signOut: (state) => {\r\n        state.username = ''\r\n        state.email = \"\";\r\n        state.password = \"\";\r\n        state.loggedIn = false;\r\n        ;\r\n    },\r\n    registerUser: (state, { payload }) => {\r\n        state.username = payload.username;\r\n        state.email = payload.email;\r\n        state.password = payload.password;\r\n        state.loggedIn = true;\r\n        localStorage.setItem(`${state.username}`, JSON.stringify(state) )\r\n    },\r\n    loginUser: (state, { payload }) => {\r\n        state.username = payload.username;\r\n        state.email = payload.email;\r\n        state.password = payload.password;\r\n        state.loggedIn = true;\r\n        \r\n    },\r\n  },\r\n\r\n  \r\n});\r\n\r\nexport const { signOut, registerUser, loginUser } = accountSlice.actions;\r\n"],"mappings":"AAAA,SAA2BA,WAAW,QAAQ,kBAAkB;AAUhE,MAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACZ,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGN,WAAW,CAAC;EACtCO,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAO,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACR,QAAQ,GAAG,EAAE;MACnBQ,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,QAAQ,GAAG,KAAK;MACtB;IACJ,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAClCF,KAAK,CAACR,QAAQ,GAAGU,OAAO,CAACV,QAAQ;MACjCQ,KAAK,CAACP,KAAK,GAAGS,OAAO,CAACT,KAAK;MAC3BO,KAAK,CAACN,QAAQ,GAAGQ,OAAO,CAACR,QAAQ;MACjCM,KAAK,CAACL,QAAQ,GAAG,IAAI;MACrBQ,YAAY,CAACC,OAAO,CAAE,GAAEJ,KAAK,CAACR,QAAS,EAAC,EAAEa,IAAI,CAACC,SAAS,CAACN,KAAK,CAAE,CAAC;IACrE,CAAC;IACDO,SAAS,EAAEA,CAACP,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAC/BF,KAAK,CAACR,QAAQ,GAAGU,OAAO,CAACV,QAAQ;MACjCQ,KAAK,CAACP,KAAK,GAAGS,OAAO,CAACT,KAAK;MAC3BO,KAAK,CAACN,QAAQ,GAAGQ,OAAO,CAACR,QAAQ;MACjCM,KAAK,CAACL,QAAQ,GAAG,IAAI;IAEzB;EACF;AAGF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEE,YAAY;EAAEM;AAAU,CAAC,GAAGX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}