{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abc\\\\Desktop\\\\New folder\\\\client\\\\src\\\\features\\\\account\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { loginUser } from \"./accountSlice\";\nimport { TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  var _errors$username, _errors$password;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isValid,\n      errors\n    }\n  } = useForm({\n    mode: \"all\"\n  });\n  const dispatch = useAppDispatch();\n  async function submitForm(data) {\n    try {\n      const storedUserData = JSON.parse(localStorage.getItem(`${data.username}`));\n      console.log(storedUserData.password);\n      if (storedUserData && storedUserData.password) {\n        navigate(\"/\");\n        dispatch(loginUser(data));\n      } else {\n        navigate(\"/register\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitForm),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.username,\n        ...register(\"username\", {\n          required: \"Username is required\"\n        }),\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: !!errors.username,\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"Password is required\"\n        }),\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isValid,\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"Bjx9YdaM/jR8NhJLOZjtQs6Cj/s=\", false, function () {\n  return [useNavigate, useForm, useAppDispatch];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","useAppDispatch","loginUser","TextField","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","_errors$username","_errors$password","navigate","register","handleSubmit","formState","isSubmitting","isValid","errors","mode","dispatch","submitForm","data","storedUserData","JSON","parse","localStorage","getItem","username","console","log","password","error","children","onSubmit","required","helperText","message","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/abc/Desktop/New folder/client/src/features/account/Login.tsx"],"sourcesContent":["import { FieldValues, useForm } from \"react-hook-form\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { loginUser, registerUser } from \"./accountSlice\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid, errors },\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n  const dispatch = useAppDispatch();\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      const storedUserData = JSON.parse(localStorage.getItem(`${data.username}`)!);\r\n      console.log(storedUserData.password);\r\n      if (storedUserData && storedUserData.password) {\r\n        navigate(\"/\");\r\n        dispatch(loginUser(data));\r\n      } else {\r\n        navigate(\"/register\");\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(submitForm)}>\r\n        <TextField\r\n          error={!!errors.username}\r\n          {...register(\"username\", { required: \"Username is required\" })}\r\n          helperText={errors?.username?.message as string}\r\n        ></TextField>\r\n        <TextField\r\n          error={!!errors.username}\r\n          type=\"password\"\r\n          {...register(\"password\", { required: \"Password is required\" })}\r\n          helperText={errors?.password?.message as string}\r\n        ></TextField>\r\n        <button disabled={!isValid} type=\"submit\">\r\n          Log in\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}